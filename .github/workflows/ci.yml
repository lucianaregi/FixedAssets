name: CI Pipeline - Build, Test and Lint

on:
  push:
    branches:
      - main   
  pull_request:
    branches:
      - main   

jobs:
  build-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x' 

      - name: Restore NuGet packages
        run: dotnet restore ./FixedAssets/FixedAssets.sln 

      - name: Build the backend
        run: dotnet build ./FixedAssets/FixedAssets.sln --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test ./FixedAssets/FixedAssets.sln --no-build --verbosity normal --logger "console;verbosity=detailed"

  build-frontend:
    name: Build and Lint Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install
        working-directory: ./FixedAssets/FixedAssetsWeb

      - name: Lint the code
        run: npm run lint
        working-directory: ./FixedAssets/FixedAssetsWeb

      - name: Build the frontend
        run: npm run build
        working-directory: ./FixedAssets/FixedAssetsWeb

  sonarcloud:
  name: SonarCloud Scan
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Begin SonarCloud scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin /k:"lucianaregi_FixedAssets" /o:"luciana-rocha" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
    - name: Build and analyze
      run: |
        dotnet build ./FixedAssets/FixedAssets.sln --configuration Release
        dotnet test ./FixedAssets/FixedAssets.sln --no-build --verbosity normal --logger "console;verbosity=detailed"
    - name: End SonarCloud scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
